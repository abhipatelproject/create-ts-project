name: Build

on:
  push:
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
      # - name: Checkout
      #   uses: actions/checkout@v2

      # - uses: actions/setup-node@v1
      #   with:
      #     node-version: 12.x

      # - name: Cache .yarn outside repo
      #   uses: actions/cache@v1
      #   with:
      #     path: ../.yarn
      #     key: ${{ runner.os }}-yarn-2-${{ hashFiles('./yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-2-

      # - name: Copy some .yarn contents into repo
      #   run: |
      #     cp -R ../.yarn/cache ./.yarn || :
      #     cp -R ../.yarn/unplugged ./.yarn || :
      #     cp ../.yarn/build-state.yml ./.yarn || :
      #     cp ../.yarn/install-state.gz ./.yarn || :

      # - name: Lint, test, build
      #   run: |
      #     yarn
      #     yarn verify:all
      
      - name: Release
        if: ${{ startsWith(github.ref, 'refs/tags/v' }}
        env:
          RELEASE_VERSION: $(echo ${GITHUB_REF:10})
        run: |
          echo ref: ${{ github.ref }}
          echo cut: 'refs/tags/v1.0.0-beta1' | cut -c 11-
          echo bash: ${RELEASE_VERSION}

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
